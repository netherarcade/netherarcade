<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<title>Nether Arcade – Home</title>
<meta name="description" content="Fun for everyone">
<meta name="keywords" content="Minecraft, Fun">
<link rel="icon" href="logo.png">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" />
<style>
:root {
  --bg: #131316;
  --surface: #1e1e22;
  --card: #27272c;
  --accent: #ff3c3c;
  --accent2: #ff7a00;
  --text: #f3f3f7;
  --subtle: #9f9fa6;
}
* { box-sizing: border-box; margin: 0; padding: 0; }
body { font-family: "Inter", system-ui, sans-serif; background: var(--bg); color: var(--text); display: flex; flex-direction: column; min-height: 100vh; }
.banner-wrap { position: relative; width: 100%; height: 260px; overflow: hidden; }
.banner-img { width: 100%; height: 100%; object-fit: cover; }
.banner-fade { position: absolute; inset: 0; background: linear-gradient(to bottom, rgba(19,19,22,0) 60%, var(--bg) 100%); }
nav { position: sticky; top: 0; z-index: 10; background: var(--surface); display: flex; justify-content: center; gap: 1.5rem; padding: 0.75rem 1rem; border-bottom: 1px solid var(--card); }
nav a { text-decoration: none; color: var(--subtle); font-size: 1rem; transition: color 0.2s ease; }
nav a.active, nav a:hover { color: var(--accent); }
main { flex: 1; padding: 2.5rem 1.5rem; display: flex; flex-direction: column; align-items: center; text-align: center; }
h1 { font-size: 2.5rem; font-weight: 700; margin-bottom: 1rem; }
p { color: var(--subtle); line-height: 1.6; margin-bottom: 1.5rem; }
.divider { margin: 1.5rem 0; color: var(--accent); font-weight: 600; }

/* Counter / Game Box */
.counter-wrap { display:flex; flex-direction:column; align-items:center; gap:1rem; background:var(--card); padding:1.5rem; border-radius:12px; margin-top:2rem; }
.counter-box { font-size:2rem; font-weight:700; }
#resetBtn { display:none; background:#000; color:#fff; border:none; padding:0.5rem 1rem; border-radius:8px; cursor:pointer; transition: transform 0.2s; }
#resetBtn:hover { transform: scale(1.05); }
.star-button { font-size: 2rem; color: var(--accent); cursor: pointer; transition: transform 0.2s ease; }
.star-button:hover { transform: scale(1.2); }

footer { text-align: center; padding: 1.5rem 1rem; font-size: 0.8rem; color: var(--subtle); }
</style>
</head>
<body>

<!-- Banner -->
<div class="banner-wrap">
  <img class="banner-img" src="banner.jpg" alt="Nether Arcade Banner" loading="lazy">
  <div class="banner-fade"></div>
</div>

<!-- Navigation -->
<nav>
  <a href="index.html" class="active">Home</a>
  <a href="about.html">About Us</a>
  <a href="social.html">Social</a>
</nav>

<main>
  <h1>Welcome to Nether Arcade</h1>
  <p>Play Minecraft-inspired command-block minigames and click your way through milestones!</p>

  <div class="divider">─────────﹒˗ˏˋ ✩ ˎˊ˗﹒─────────</div>

  <!-- Counter Game -->
  <div class="counter-wrap">
    <div id="counter" class="counter-box">0</div>
    <div id="stats">Click Value: 0.5 | Idle CPM: 0 | 30 sec</div>
    <i id="star" class="fa-solid fa-star star-button"></i>
    <button id="resetBtn">Reset</button>
  </div>

  <div class="divider">─────────﹒˗ˏˋ ✩ ˎˊ˗﹒─────────</div>
</main>

<footer>
  &copy; <span id="yr"></span> Nether Arcade &nbsp;•&nbsp; Not affiliated with Mojang
</footer>

<script>
let counter = 0;
let clickValue = 0.5;
let idleCPM = 0;
let resetAvailable = false;
let intervalTime = 30000; 
let milestones = [
  { limit: 10, used:false, clickVal:1, idleCPM:0 },
  { limit: 100, used:false, clickVal:1.5, idleCPM:15 },
  { limit: 1000, used:false, clickVal:2, idleCPM:15 },
  { limit: 5000, used:false, clickVal:2, idleCPM:30 },
  { limit: 10000, used:false, clickVal:2, idleCPM:45 },
  { limit: 25000, used:false, clickVal:2, idleCPM:50 },
  { limit: 100000, used:false, clickVal:2, idleCPM:50, special:true }
];

document.getElementById("star").addEventListener("click", () => {
  if(!resetAvailable || counter < milestones.find(m=>!m.used)?.limit) {
    counter += clickValue;
    updateUI();
    checkMilestones();
  }
});

document.getElementById("resetBtn").addEventListener("click", () => {
  let milestone = milestones.find(m => !m.used && counter >= m.limit);
  if(!milestone && counter >= 25000) {
    counter = 0;
    clickValue += 2;
    resetAvailable = false;
    document.getElementById("resetBtn").style.display="none";
    updateUI();
    return;
  }
  if(milestone && !milestone.used) {
    counter = 0;
    milestone.used = true;
    clickValue = milestone.clickVal;
    idleCPM = milestone.idleCPM;
    if(milestone.special){ intervalTime = 20000; }
    resetAvailable = false;
    document.getElementById("resetBtn").style.display="none";
    updateUI();
  }
});

setInterval(()=>{ counter += idleCPM; updateUI(); checkMilestones(); }, intervalTime);

function checkMilestones(){
  let milestone = milestones.find(m => !m.used && counter >= m.limit);
  if(milestone || counter >= 25000){
    if(!resetAvailable){
      resetAvailable = true;
      document.getElementById("resetBtn").style.display="inline-block";
    }
  }
}

function updateUI(){
  document.getElementById("counter").textContent = Math.floor(counter);
  let secLabel = intervalTime===30000 ? "30 sec":"20 sec";
  document.getElementById("stats").textContent =
    `Click Value: ${clickValue} | Idle CPM: ${idleCPM} | ${secLabel}`;
}

document.getElementById("yr").textContent = new Date().getFullYear();
updateUI();
</script>
</body>
</html>

